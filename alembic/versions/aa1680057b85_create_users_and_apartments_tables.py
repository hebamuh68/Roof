"""Create users and apartments tables

Revision ID: aa1680057b85
Revises: 425a31e7df52
Create Date: 2025-08-12 17:51:25.452029

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'aa1680057b85'
down_revision: Union[str, Sequence[str], None] = '425a31e7df52'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('apartments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('location', sa.String(), nullable=False),
    sa.Column('apartment_type', sa.String(), nullable=False),
    sa.Column('rent_per_week', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('duration_len', sa.Integer(), nullable=True),
    sa.Column('place_accept', sa.String(), nullable=False),
    sa.Column('furnishing_type', sa.String(), nullable=False),
    sa.Column('is_pathroom_solo', sa.Boolean(), nullable=False),
    sa.Column('parking_type', sa.String(), nullable=False),
    sa.Column('keywords', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_apartments_id'), 'apartments', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('location', sa.String(), nullable=False),
    sa.Column('flatmate_pref', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('keywords', postgresql.ARRAY(sa.String()), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_apartments_id'), table_name='apartments')
    op.drop_table('apartments')
    # ### end Alembic commands ###
